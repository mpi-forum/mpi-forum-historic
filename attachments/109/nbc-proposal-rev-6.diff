Index: coll.tex
===================================================================
--- coll.tex	(revision 83)
+++ coll.tex	(working copy)
@@ -4755,9 +4755,7 @@
 %\mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 %\mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.95 l.5 - p.95 l.17, File 1.3/coll.tex, lines 205-223
 
-This call starts a nonblocking variant of \mpifunc{MPI\_BCAST}. 
-The data movement after \mpifunc{MPI\_IBCAST} completes is identical to
-the data movement after \mpifunc{MPI\_BCAST} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_BCAST} (see
 Section~\ref{sec:coll-broadcast}). 
 
 \subsubsection{Example using \func{MPI\_IBCAST}}
@@ -4833,9 +4831,7 @@
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.95 l.46 - p.96 l.25, File 1.3/coll.tex, lines 246-293
 
-This call starts a nonblocking variant of \mpifunc{MPI\_GATHER}. 
-The data movement after \mpifunc{MPI\_IGATHER} completes is identical to
-the data movement after \mpifunc{MPI\_GATHER} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_GATHER} (see
 Section~\ref{sec:coll-gather}). 
 
 \begin{funcdef}{MPI\_IGATHERV(sendbuf, sendcount, sendtype, recvbuf,
@@ -4884,9 +4880,7 @@
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.97 l.32 - p.98 l.21, File 1.3/coll.tex, lines 318-364
 
 
-This call starts a nonblocking variant of \mpifunc{MPI\_GATHERV}. 
-The data movement after \mpifunc{MPI\_IGATHERV} completes is identical to
-the data movement after \mpifunc{MPI\_GATHERV} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_GATHERV} (see
 Section~\ref{sec:coll-gather}). 
 
 
@@ -4936,9 +4930,7 @@
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.105 l.3 - p.105 l.27, File 1.3/coll.tex, lines 801-846
 
 
-This call starts a nonblocking variant of \mpifunc{MPI\_SCATTER}. 
-The data movement after \mpifunc{MPI\_ISCATTER} completes is identical to
-the data movement after \mpifunc{MPI\_SCATTER} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_SCATTER} (see
 Section~\ref{sec:coll-scatter}). 
 
 
@@ -4986,9 +4978,7 @@
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.106 l.7 - p.106 l.30, File 1.3/coll.tex, lines 869-907
 
 
-This call starts a nonblocking variant of \mpifunc{MPI\_SCATTERV}. 
-The data movement after \mpifunc{MPI\_ISCATTERV} completes is identical to
-the data movement after \mpifunc{MPI\_SCATTERV} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_SCATTERV} (see
 Section~\ref{sec:coll-scatter}). 
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ISCATTER END %%%%%%%%%%%%%%%%%%%%%%%
@@ -5033,10 +5023,8 @@
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.109 l.25 - p.109 l.36, File 1.3/coll.tex, lines 1084-1112
 
-This call starts a nonblocking variant of \mpifunc{MPI\_ALLGATHER}. 
-The data movement after \mpifunc{MPI\_IALLGATHER} completes is identical to
-the data movement after \mpifunc{MPI\_ALLGATHER} completes (see
-Section~\ref{sec:coll-allcast}). 
+This call starts a nonblocking variant of \mpifunc{MPI\_ALLGATHER}
+(see Section~\ref{sec:coll-allcast}). 
 
 
 \begin{funcdef}{MPI\_IALLGATHERV(sendbuf, sendcount, sendtype, recvbuf,
@@ -5079,9 +5067,7 @@
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.110 l.27 - p.110 l.38, File 1.3/coll.tex, lines 1132-1160
 
-This call starts a nonblocking variant of \mpifunc{MPI\_ALLGATHERV}. 
-The data movement after \mpifunc{MPI\_IALLGATHERV} completes is identical to
-the data movement after \mpifunc{MPI\_ALLGATHERV} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_ALLGATHERV} (see
 Section~\ref{sec:coll-allcast}). 
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% IALLGATHER END %%%%%%%%%%%%%%%%%%%%%%%
@@ -5127,9 +5113,7 @@
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.111 l.31 - p.111 l.47, File 1.3/coll.tex, lines 1204-1233
 
-This call starts a nonblocking variant of \mpifunc{MPI\_ALLTOALL}. 
-The data movement after \mpifunc{MPI\_IALLTOALL} completes is identical to
-the data movement after \mpifunc{MPI\_ALLTOALL} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_ALLTOALL} (see
 Section~\ref{sec:coll-alltoall}). 
 
 \begin{funcdef}{MPI\_IALLTOALLV(sendbuf, sendcounts, sdispls, sendtype,
@@ -5177,9 +5161,7 @@
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.112 l.32 - p.112 l.48, File 1.3/coll.tex, lines 1259-1291
 
-This call starts a nonblocking variant of \mpifunc{MPI\_ALLTOALLV}. 
-The data movement after \mpifunc{MPI\_IALLTOALLV} completes is identical to
-the data movement after \mpifunc{MPI\_ALLTOALLV} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_ALLTOALLV} (see
 Section~\ref{sec:coll-alltoall}). 
 
 
@@ -5253,9 +5235,7 @@
 
 \mpiiidotiMergeNEWforSINGLEbegin% MPI-2.1 round-two - begin of modification
 %The following function
-This call starts a nonblocking variant of \mpifunc{MPI\_ALLTOALLW}. 
-The data movement after \mpifunc{MPI\_IALLTOALLW} completes is identical to
-the data movement after \mpifunc{MPI\_ALLTOALLW} completes (see
+This call starts a nonblocking variant of \mpifunc{MPI\_ALLTOALLW} (see
 Section~\ref{sec:coll-alltoall}). 
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% IALLTOALL END %%%%%%%%%%%%%%%%%%%%%%%
@@ -5297,9 +5277,8 @@
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.113 l.44 - p.114 l.30, File 1.3/coll.tex, lines 1344-1433
 
-This call starts a nonblocking variant of \mpifunc{MPI\_REDUCE}. 
-\mpifunc{MPI\_IREDUCE} performs the same reduction operation as
-\mpifunc{MPI\_REDUCE} (see Section~\ref{subsec:coll-reduce}). 
+This call starts a nonblocking variant of \mpifunc{MPI\_REDUCE} (see
+Section~\ref{subsec:coll-reduce}). 
 
 %\begin{implementors}
 %It is strongly recommended that \mpifunc{MPI\_IREDUCE} is implemented so
@@ -5384,9 +5363,8 @@
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1 - end of take lines
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.124 l.23 - p.124 l.28, File 1.3/coll.tex, lines 2082-2089
 
-This call starts a nonblocking variant of \mpifunc{MPI\_ALLREDUCE}. 
-\mpifunc{MPI\_IALLREDUCE} performs the same reduction operation as
-\mpifunc{MPI\_ALLREDUCE} (see Section~\ref{subsec:coll-all-reduce}). 
+This call starts a nonblocking variant of \mpifunc{MPI\_ALLREDUCE} (see
+Section~\ref{subsec:coll-all-reduce}). 
 
 
 
@@ -5432,10 +5410,8 @@
 \mpiiidotiMergeFromONEdotTHREEbegin%   MPI-2.1 - take lines: MPI-1.1, Chap. 4, p.125 l.31 - p.125 l.40, File 1.3/coll.tex, lines 2148-2170
 
 
-This call starts a nonblocking variant of \mpifunc{MPI\_REDUCE\_SCATTER}. 
-\mpifunc{MPI\_IREDUCE\_SCATTER} performs the same reduction operation as
-\mpifunc{MPI\_REDUCE\_SCATTER} (see
-Section~\ref{sec:coll-reduce-scatter}). 
+This call starts a nonblocking variant of \mpifunc{MPI\_REDUCE\_SCATTER}
+(see Section~\ref{sec:coll-reduce-scatter}). 
 
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% IREDUCE_SCATTER END %%%%%%%%%%%%%%%%%%%%%%%
@@ -5469,9 +5445,8 @@
 \mpicppemptybind{MPI::Intracomm::Iscan(const void*~sendbuf, void*~recvbuf, int~count, const MPI::Datatype\&~datatype, const~MPI::Op\&~op) const}{MPI::Request}
 \mpiiidotiMergeFromTWOdotZEROend%      MPI-2.1
 
-This call starts a nonblocking variant of \mpifunc{MPI\_SCAN}. 
-\mpifunc{MPI\_ISCAN} performs the same reduction operation as
-\mpifunc{MPI\_SCAN} (see Section~\ref{sec:coll-scan}). 
+This call starts a nonblocking variant of \mpifunc{MPI\_SCAN} (see
+Section~\ref{sec:coll-scan}). 
 
 
 
@@ -5509,9 +5484,8 @@
 
 \mpicppemptybind{MPI::Intracomm::Iexscan(const void* sendbuf, void* recvbuf, int count, const MPI::Datatype\& datatype, const MPI::Op\& op) const}{MPI::Request}
 
-This call starts a nonblocking variant of \mpifunc{MPI\_EXSCAN}. 
-\mpifunc{MPI\_IEXSCAN} performs the same reduction operation as
-\mpifunc{MPI\_EXSCAN} (see Section~\ref{subsec:coll-exscan}). 
+This call starts a nonblocking variant of \mpifunc{MPI\_EXSCAN} (see
+Section~\ref{subsec:coll-exscan}). 
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% IEXSCAN END %%%%%%%%%%%%%%%%%%%%%%%
 
